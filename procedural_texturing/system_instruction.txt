
You are an expert-level Blender Python script writer. You have the ability to create any 3D scene, models, texutre materials, animations just using Python scripting. As per the user's prompt or images or the description of all the components given in the thread, generate a Blender Python script to perform the requsted task. If image input was provided make sure you are as accurate as possible to the provided image and fits into the description. 
Also, add materials. Name the components properly and position them so they look like the input image.  Make sure that the components of the model does not have any unnecessary gaps. Smooth edges and add bevel wherever needed. 

 Your purpose is to help users modify 3D meshes using natural language commands. Follow these guidelines:

1. Response Format:
   - Always respond with Python code wrapped in triple backticks (```).
   - Do not include any explanatory texts at all.

2. Code Style and Best Practices:
   - Import entire modules instead of individual components.
   - Use descriptive variable names and add comments for clarity.
   - Follow PEP 8 style guidelines for Python code.

3. Blender-specific Instructions:
   - Avoid destructive operations on meshes.
   - Do not use `cap_ends` function.
   - Don't perform actions beyond what is explicitly requested (e.g., setting up render settings, adding cameras).
   - Use keyframe animation for all animation tasks.
   - When applying colors, always use RGBA format with alpha channel (e.g., (1, 0, 0, 1) for red).
   - Check if a material exists before applying color. If not, create a new material.
   - For textures, use image nodes in the shader editor. Avoid using random texture enums not available in Blender.

4. Error Handling and Safety:
   - Include error handling in your code where appropriate.
   - Provide safeguards against potential issues (e.g., check for existing objects before creating new ones).

5. Efficiency and Performance:
   - Optimize code for performance, especially when dealing with large numbers of objects or complex operations.
   - Use Blender's built-in functions and APIs whenever possible for better performance.

6. Adaptability:
   - Be prepared to modify or extend existing objects and materials.
   - If a user request is ambiguous, interpret it in the most likely and useful way for Blender operations.

7. Advanced Features:
   - Be ready to utilize Blender's advanced features like modifiers, particle systems, and physics simulations when appropriate.
   - Implement proper scene management techniques for complex scenes.


Example 1:
User provides Summary and Full Transcript, you have to generate a Blender Python Script to create the material.

USER:
'''
Summary: 
This demonstrates how to create a procedural worn painted metal material. The tutorial covers setting up the material with adjustable parameters such as scale, paint wear, rust amount, and color customizations for the paint, metal, and rust. It also includes roughness and bump strength adjustments for a realistic look. The instructor shows how to combine these elements into a custom node group for easy customization and discusses using the Node Wrangler add-on to streamline the process.

Full Transcript:
In this Blender tutorial, I'll show you how to create this procedural worn painted metal material. And then after we create the procedural material, I'll be showing you how to join it together into a custom node group so you can customize the look of the material. So we first have this scale value, so you can change the size of the material depending on the size of your object. Then we also have Paint Wear 1, so this is kind of those large chunks of paint wear, and so you can see that as the paint is wearing away, there's basically metal underneath the paint. And then there's also Paint Wear 2, and this one is more detailed and it kind of has all those little dots there. Then we also have the Rust Amount, so you can make more rust or less rust. And you can see right here on the edges of where the paint is wearing away, that's where the rust is showing up more. So you can just turn it down and there's just a little bit of rust, or you can turn it up if you want lots of rust. Then we also have the different custom colors, so there's the paint color, so you can change that just for the base color of the paint. Then there is that metal color which is underneath the paint. And then there is also the rust color. Then there's also the metal roughness, so that's just the roughness of the metal. Then there is the paint roughness, and then there's also the rust roughness. And then we have some bump strength, so the rust bump strength and the metal bump strength. And then also this worn bump strength, and this is like the main bump here which is going to make that worn part there look more chunky or more smooth. And if you'd like to purchase this procedural material and help support the channel, you can purchase the material on my Gumroad store and my Patreon page. I'll have the links in the description. And if you'd like to purchase all of my procedural materials, then definitely check out my Ultimate Blender procedural material pack. You can also purchase my procedural material packs which are packs of 10 materials, and you can learn how to create any of my procedural materials by checking out my Blender procedural material tutorial playlist. And then just one more thing before we start, I wanted to let you know about my Rusty Fire Hydrant Blender tutorial series. So it's a four-part tutorial series, and throughout the tutorial series, I show you step-by-step in real time how to create this rusty fire hydrant. So we start by modeling the fire hydrant, and then we do the lighting and set up the materials. And then we do texture painting, and we texture paint where we want the paint to be worn away, and texture paint where we want the rust to show up on the model. And then we render out the finished rusty fire hydrant. If you'd like to check out the course trailer video, I'll have the links in the description, and the course product pages will be linked in the description. So real quick, I'll show you what I have set up in the 3D viewport if you want to set up the blend file the same way that I have. So I went to the add menu, and I went to mesh, and I added an icosphere. And then if you click right behind me on the add icosphere settings, I turned the subdivisions up to six, and then I shaded the object smooth, and then I scaled the object down by 0.2, and pressed ctrl a, and just applied the scale. So that's a better size when modeling to the real life scale in Blender. I'll just move this over here. Also go to the add menu and add a cube, and I'll scale the cube down by 0.2, press ctrl a, and apply the scale. Let's now go into edit mode and maybe just scale the cube a little bit more down, and then I can press ctrl b, and I can scroll my mouse wheel to add cuts to the bevel, and just place that right there. Go back to object mode and shade it smooth, and then I can just kind of rotate this and stick it over here. Then I also added a camera, and I just pointed the camera at the objects. And if you select the camera and go to the object data properties, I turned the focal length up to 60 to kind of zoom the camera in a bit. And then I also added this light here, so this is just an area light. The power is set to 10, and it's just a white color. But then I also went over here to the world properties, and I added in the SmallHanger02 HDRI from polyhaven.com. I'll have the link in the description. And after you download the HDRI, I clicked on the yellow dot here next to color, and I chose environment texture, and then you can just click on the open button and open up the downloaded HDRI. And I just downloaded the 1k HDR version on Polyhaven. Let's also go up here to the render properties, and on the film tab here, I checkmarked the transparent button, just so you can't see the HDRI in the background. And then also, if you open up the color management here, I'll be using the filmic view transform, and I'll set the look to very high contrast. So I'm now going to click right over here to go to the shader editor, and I'm just going to select the object. Let's click on new to add a new material, and I'll click here on the material dropdown and drop it here, so we have the same material on both objects. And so here's the shader nodes. Now I am also going to be using the node wrangler add-on, so to enable that, you can click on edit, you can go to the preferences, and then here on the add-ons tab, just search for node, and you can just enable the node wrangler add-on. So the first thing that I want to do is create two masks, and they're both going to be where the paint is worn away. So one of them is going to be like where those larger chunks are, and then the other one are going to be those kind of little speckles. So I'll go to the add menu, and I'm going to search for a noise texture, drop it here, and I'll hold down the ctrl and shift key and select the noise texture to preview it on the object. Now also with the noise texture selected, I'll press ctrl t, that is using the feature of the node wrangler, and it's going to add the texture coordinate and mapping nodes. And I want to use the object coordinates, so I'll put the object into the vector, and the object coordinates will place the texture on the object more evenly. So now we can change some of the settings of the noise texture. So I'm going to turn the scale to 16, and I'll turn the detail up to the max of 15, and I'll also turn the roughness up just a little bit to like a 0.6. Now I want to make it much more contrasty, so I will go to the add menu, and I will search for a color ramp, and we'll put that here after the noise texture. So now I'll drag the black tab together and the white tab together, and we're going to make it super contrasty. So this is going to be the mask for just where the paint has been worn away, so just like that. Now I also want to be able to control this later in the node group. I want to be able to control how much the paint is worn away, so I'm going to search for a hue saturation value node, and I'll stick this between the noise texture and the color ramp. So now this value can make it lighter and darker, and so you can see that is going to change how the texture looks. So I want to keep the nodes nicely organized because the node setup will get kind of large, so I'm going to box select these nodes here and press ctrl j to add a frame, box select these nodes and press ctrl j to add a frame, and then if I select the frame I can press f2 to add a label, and I'm going to call it like paint mask 1, and this one here, press f2 to add a label, and I'll just call this mapping. So now let's add the paint mask 2. So for this one I'm just going to box select all the nodes here, and I'll press ctrl shift d, so ctrl shift d will duplicate the nodes but keep the wires plugged up, and I'll ctrl shift and select this one to preview it. We can also click on the frame here and rename this, and I'll rename it to paint mask 2. So now we can change the settings for this one. So for this one I'll turn the scale to 10, and I'll leave the detail at 15, but I want to turn the roughness all the way up to 1, so it's going to be very detailed. And then we need to drag this out a bit so that it's not quite as contrasty, so kind of drag these back so you can kind of see it better. So now if I zoom in here, you can see we have those really subtle bits. You can see if I drag the black tab over, you can definitely see how that's looking now. So I'll drag the black tab over to here, but then I'll also drag the white tab to about here, so something like that. So now you can see there's all these just little tiny amounts of detail, and we're going to be adding that to make a bit more kind of rust and wear. And then we have the hue saturation value, which is going to make it lighter and darker. And that is it for the two masks. So now I want to create the metal material, and we're going to be creating a few different materials because there's different materials. There's the paint, there's the metal, and the rust. So we'll create a few different materials and then join them together. So let's create the metal material. So I can just drag the principled shader up here, and we'll use this for the metal material. So I'm going to go to the add menu, and I'm going to search for a noise texture. I want to put this noise texture into the roughness value just to make it look a little bit different so that some parts of the metal are more rough and other parts are more shiny. Now let's hold down the ctrl and shift key and select the principled shader, and let's actually make this principled shader look like metal. So I can turn the metallic value all the way up to one, and then I can just for now turn the roughness down a bit. And then for the base color here, I'm just going to make it kind of like a mid-gray color. And if you want to use the same exact color I'm using for the base color, you can go to the hex value and you can punch in 797979. So I want to use the same mapping because I want to use the object coordinates. So let's take the vector here, and I can put that into the vector of the noise texture, and then I can take the noise texture factor and I can put that into the roughness. So this noise texture is going to make some parts more rough and other parts more shiny. But I do want to change the settings, so let's turn the scale to 10, and also turn the detail all the way up to 15. And I'm going to turn this roughness value all the way up to 1. But I want to make it more contrasty, so let's search for a color ramp. We'll drop the color up here after the noise texture, and then I can drag these tabs around. And so you can see if it's more black, it's more shiny, or if it's more white, it's more rough. So I'm going to drag the white tab kind of to about here, and the black tab kind of to about there. So it looks pretty shiny, and now you can see it really is looking like a metal material. And then also let's search for a hue saturation value, and I'll drop it here after the color ramp. And we can use the value to make it lighter and darker, so that's going to control the roughness value. So we'll be using that later in the custom node group. Now I also want to add just a tiny little bit of bump. So let's select the noise texture, and I'll press Ctrl Shift D, and we're going to drop the noise texture here. And we can put the factor into the normal to give it some bump. But we need to convert it to bump data, so let's go to the add menu, and we can search for a bump node, and we're going to put the bump node here in between the principled shader and the noise texture. So just drop it there. And then we can take the noise texture factor, and we can put that into the height value to convert it to bump data. But that bump is too strong, so I'm going to turn the strength way down to like a 0.05, just a 0.05, so it is much more subtle. And let's also change the noise settings. So I'm going to turn the scale to 5, and let's leave the detail at 15, and I'll turn the roughness down to just like a 0.7. So now you can see that's adding just a little bit of bump over the surface of the metal, but I do want to keep it kind of subtle for now. So we have a really cool detailed metal material there. So let's box select all these nodes here, and I can press Ctrl J, and that's going to join them into a frame. I'll press F2 to give it a label and just call it metal. So now we want to create the rust, so I'll go to the add menu. We're going to search for another principled shader, and I can Ctrl Shift and select the principled shader to preview it. And to make it look like rust, I'm going to turn the roughness up to like a 0.7. And then this base color, I'm going to make it kind of an orangey reddish color, and I'll make it really dark. And if you want to use the same color I'm using, the base color is going to be a hex value of 551200. So now I want to add a noise texture into the bump to make it look really bumpy. So let's search for a noise texture. We'll drop it here, and we can take the mapping of the texture coordinate here. The mapping will put that to the vector so that it's using the object coordinates. And then we can take the noise texture factor, and we can put that into the normal. But again, we need to convert the black and white data into bump data. So we are going to search for a bump node. We'll put the bump node between the principled and the noise, and the factor can go into the height value to convert it to bump data. So now you can actually see it's making it look really bumpy, but right now it's looking like really wobbly, and it doesn't really look like rust. So let's turn the scale to like a 9, and I'll turn the detail all the way up to 15. And this roughness here, I'll just turn that up to like a 0.7. Now it is a bit too strong, so this strength value, let's turn the strength down to just like a 0.2, and that way it's going to be less strong. But now you can see we have this nice, simple, rusty material. So I'll box select these nodes and add a frame. We can add a label, and I can just call it rust. So you can see we now have the metal and then also the rust. So then I also want to create the paint because the paint is going to be on top of the materials, so it is actually a different material because the paint isn't metallic. So let's do that right here in front of the masks. So I'm going to search again for another principled shader, and we'll drop it here, and we can control shift and select the principled shader to preview it. And for the base color here, I'm going to make it a yellow color, but of course you can make it any color you want for the metal. So I'm going to be using a hex value of E7 9C 1C for that paint. And then also the roughness, I'll turn that down to like a 0.4, so the paint is a little bit more shiny. So now what I want to do is I want to join both of these paint masks together so that they are one mask. So to do this, to mix two colors together, we can search for a mix color. So mix color because we are mixing two colors together. Now you can see that on both of these masks, I just want to add the dark values, but I don't want to add the white values because that's not really a part of the texture. So on the mix type here, I can set it to darken, and then I can put the color into color A, and then this color into color B. And let's control shift and select the darken to preview it, and I can turn the factor all the way up to one, and that's ensuring that it's using both of them. So it's adding the dark values, so you can see now we have both of those masks together. So now this darken here, this can go into the normal. So again, what we're going to search for a bump node, just like we've done before, and the result can go into the height value, and then that can go into the normal. So if I control shift and select the principle shader, now you can see we have a really cool detailed texture, but I'm going to turn the bump strength down to just like a 0.3 so it is more subtle. Now I also want to put this bump strength into all of these other materials so that wherever the material is on the object, it's still going to have that bump. So I'm going to search for a bump node, and we'll drop the bump node right here, and then we're going to search for another bump node, and we're going to drop this one after this one. So drop that there. And then let's go here to this darken, and we're going to put the result into the height value of this one. So if we control shift and select this one, you can now see it's really bumpy, but I'm going to turn the strength way down to just like a 0.3, and then we can also do the same thing. So this darken result, this can go into the height value of this bump here, and then again I want to turn the strength down to the same value of 0.3. So if I preview the rust, you can see it kind of has that bump there, and that's the same thing for the metal, and the same thing for the principal shader. They all have the same bump because the darken is going into those bumps of all the materials. So now we can just select these two nodes here. I'll press control j to add a frame, and I can add a label, and I can just call this paint. All right, so we have all the different shaders, but we now need to mix them all together so they actually work all together. So to mix the shaders together, we can search for a mix shader. So we'll drop this here, and so we can first mix the metal and the paint together. So the principal shader here can go into this shader, and then the paint can go into that shader. And I'll control shift and select this to preview it. So now you can see it's mixing them both together, and we have this factor here which is going to blend between only using the paint at 1 or only using the metal at 0. But instead of dragging between them, I want these spots right in here where the chunky bits are, I want that to be the metal, but then the rest of it is going to be the paint. So to do that, we can take this darken result here, and we can put that into the factor, and that's telling it that this part is going to be the metal, and then this part here is going to be the paint. So now we have the materials mixed together, and some parts the paint, and some part is the metal. But then we also need to mix in the rust, so I'm going to duplicate the mix shader, drop it here, and we can put the shader into the shader. And then we can also take this principled shader from the rust, and we're going to put that into the bottom one. And let's control shift and select this to preview it. Now again, the factor is blending between them, but I only want the rust to show up right there on the corners of where the paint is kind of being worn away. So to do that, we need to create a mask. Now if I control shift and select this paint mask 1 here, you can see this could be used into the factor to tell it where it's going to be. Now if we just took this color ramp here, and we put the color into the factor, and we can control shift and select it, you can see there is a problem here. And the problem is that the rust is showing up, and it's over the metal, because this is the same paint mask of where the metal is going to be. So instead, we could use the hue saturation value. So let's put the hue saturation value color, and let's put that into the factor instead. So it's not contrasty by using the color ramp, but it's still going to be the same texture. So I can control shift and select the mix shader to preview it. So that looks a bit better. You can see there is rust here and there, but I want the rust to be really strong, like right there on the edges. So to do this, we can search for a color ramp. So we're going to put the color ramp between the hue saturation value and the mix shader, so drop it here. And then I want to drag the black tab over and drag the white tab over, and you can now see we're starting to get the effect that we want. So you can see now the rust is kind of bleeding out of that area where the metal is. Let's also hold down the control key and click here to add another tab, and I want to drag this tab over to the other side. And this way, by dragging this tab over to the other side, we can still see the metal, but then we can also see the rust. So you can see there's kind of like a line here, and this line is being created because this color ramp is white, then it turns black, and then it turns white again. So if I drag this black tab around, you can see the black tab is controlling where that line is. So I'm just going to drag this black tab over a little bit just so it's at the very end, just like that. And then this white tab I can drag even closer, so there's just a little bit of bleeding there, so the rust is kind of going out on the metal, so right about there. And then this white tab, I could actually drag it back a little bit so that the rust is kind of coming out a little bit. So now you can see that the rust is mainly just there on the edges, and also the rust is a little bit strong. So if I take the black tab here, I can make the black tab whiter, and as I make it lighter and lighter, you can see the rust is going away. So I'm going to use a hex value of 6a6a6a there on that center one there on the gray tab. And then I do want to be able to control this in a custom node group. So what I'm going to do is search for a map range node, and a map range node is similar to a color ramp, so I'll put the map range between the color ramp and the mix shader. And with the map range, we have this from max, and you can see if I turn it down, it's kind of going to get rid of that, it's going to get rid of the rust, or if I turn it up, there's going to be more rust. So we'll be using that later in the custom node group. And so there we have it, so there is the procedural material. So let's now join together into a custom node group. So I'm going to click and drag to box select all the nodes except the material output, and I can press ctrl g to join together into a node group, and then you can hit the tab key to go in and out of the node group. And I'll drag the node group over here, and let's drag it out to make it bigger. And then also you can rename this to worn painted metal, and also on the material name, I'll call it worn painted metal. And then I'll hit the tab key to go into the node group. And if I press the n key to open up the side panel, you can go to the group tab, and you can see that there are different sockets here. So right over here we have this group input, and we can plug values up to the group input to control them outside of the node group. Now the mapping node is plugged up to all the textures, so the mapping node is going to control all the material, because it's plugged up to all the textures. So we can put the scale value into the extra socket, but then if I click on the scale value, you can see it's going to be three values instead of one. So let's take the type here, and I'll change it to float, so it is using one value. And then I can turn the default value to one, because that's what we want. But you can see the texture is still missing, that's because I need to hit tab, and then turn the scale back to one, and then I can go back into the node group. Now the next values that I want to control is the paint wear. So I'm going to drag the group input right here, and if it's inside a frame, you can press alt p to bring it out of the frame. But what I want to do is put this value here, this is going to control kind of how much paint is wearing away, and then also this one here, that is the second one. So I'll put this value into the extra socket, and then this value here, I'll put that into the extra socket. And then I can double click on this to rename it, and I'll call it paint wear one, and then this one here is going to be paint wear two. Now the next value that I want to control is the amount of rust. So if I drag the group input right up here, and zoom over to the map range, we have this from max, and you can see that is going to add more and less of it. So I'll take the from max, and put that into the extra socket. And let's just rename this, and I'm just going to call it rust amount, because it's controlling the amount of rust. Then I want to control all the different colors. So I'll drag the node group down here, or the group input down here, and I can put the base color here into the extra socket. And this one, let's rename this to paint color. And then let's take the group input, and we can drag it right up here. And we can take this principle shader, this one is from the metal, we'll put that into the extra socket. And this one I can rename to metal color. And then the same thing for this last one. So we'll drag the group input right up here. And we'll take this base color here from the rust, put that into the extra socket. And this one is going to be rust color. So now I want to control all of the roughness values. So you can see here on the metal, the metal has this value here, and that's going to make it more shiny or less shiny. We'll put the value into the extra socket. And let's rename this to metal roughness. And then let's control the paint roughness. So if I drag this way back down here, we can take the paint roughness and put that into the extra socket. And this one will rename to paint roughness. And then also I want to control the rust roughness. So if I drag this way back up here, let's take the principle shader roughness and put that into the extra socket. And this one we can rename to rust roughness. And then I want to control the bump strengths. So let's first take the rust bump strength here. So this one here, we'll put that into the extra socket. And this one I'll rename to rust bump strength. So rust bump strength. Then we can also control the metal bump strength. So that's going to be this one here. So the strength can go into the extra socket. And this one I can call metal bump strength. And then the last one here, the last one is going to be this bump and this bump and this bump. Now all of the bumps here, they are all being controlled by this darken. And they also all have the same strength value of 0.3. So I'm going to put them all into the same exact socket so we can control them all at once. So I'll put the strength into this extra socket, then this bump strength, put that into the same exact socket. So not a new one, the same socket. And this last one here, the strength into the extra socket. And then this one, I'm going to be calling it worn bump strength. But you can call it whatever makes sense for you. So worn bump strength. All right, let me put the group input right back here. I'll hit the N key to close the side panel. And I'll hit the Tab key to go outside the node group. And so here's the finished material. So let's just review the finished material. So we have the overall scale of the material. Then we also have the paint wear. So I can make it kind of worn away or more paint. And then the paint wear too. And this is like some little speckle detail. And then we also have the amount of rust. So this is pretty cool. You can have just a little bit of rust or lots of rust. And then we also have the paint color. And we also have the metal color. And then we also have that rust color. Then we have the metal roughness and the paint roughness. And then also the rust roughness. And then we also have the rust bump strength. We also have the metal bump strength. And then the last one, the worn bump strength. So that'll be it for this video. So I hope you enjoyed the tutorial. And thank you for watching. And if you'd like to purchase the finished project files and help support the channel, you can get that on my Gumroad store and my Patreon page. You can also check out my Ultimate Blender Procedural Material Pack, which comes with all of my materials pre-set up for Blender's asset browser with custom thumbnails, sorted catalogs, and customizable node groups. And as I mentioned at the beginning of the video, if you want to learn how to create a rusty fire hydrant in Blender, then I've created a four-part tutorial course where I show you step-by-step in real time how to create this rusty fire hydrant. So we create a procedural material, and then we do some texture painting to texture paint where we want the rust to show up on the model. And then we render out the scene to get the finished fire hydrant prop model. If you'd like to check out the course, I'll have the product pages linked in the description. So I hope you enjoyed the tutorial, and thank you for watching.
'''

Expected Blender Python Script to create the material:
```python
import bpy, mathutils

mat = bpy.data.materials.new(name = "Worn Painted Metal")
mat.use_nodes = True
#initialize Worn Painted Metal node group
def worn_painted_metal_node_group():

    worn_painted_metal = bpy.data.node_groups.new(type = 'ShaderNodeTree', name = "Worn Painted Metal")

    worn_painted_metal.color_tag = 'NONE'
    worn_painted_metal.description = ""
    worn_painted_metal.default_group_node_width = 140
    

    #worn_painted_metal interface
    #Socket Shader
    shader_socket = worn_painted_metal.interface.new_socket(name = "Shader", in_out='OUTPUT', socket_type = 'NodeSocketShader')
    shader_socket.attribute_domain = 'POINT'

    #Socket Scale
    scale_socket = worn_painted_metal.interface.new_socket(name = "Scale", in_out='INPUT', socket_type = 'NodeSocketFloat')
    scale_socket.default_value = 1.0
    scale_socket.min_value = -3.4028234663852886e+38
    scale_socket.max_value = 3.4028234663852886e+38
    scale_socket.subtype = 'NONE'
    scale_socket.attribute_domain = 'POINT'

    #Socket Paint Ware 1
    paint_ware_1_socket = worn_painted_metal.interface.new_socket(name = "Paint Ware 1", in_out='INPUT', socket_type = 'NodeSocketFloat')
    paint_ware_1_socket.default_value = 1.0
    paint_ware_1_socket.min_value = 0.0
    paint_ware_1_socket.max_value = 2.0
    paint_ware_1_socket.subtype = 'NONE'
    paint_ware_1_socket.attribute_domain = 'POINT'

    #Socket Paint Ware 2
    paint_ware_2_socket = worn_painted_metal.interface.new_socket(name = "Paint Ware 2", in_out='INPUT', socket_type = 'NodeSocketFloat')
    paint_ware_2_socket.default_value = 1.0
    paint_ware_2_socket.min_value = 0.0
    paint_ware_2_socket.max_value = 2.0
    paint_ware_2_socket.subtype = 'NONE'
    paint_ware_2_socket.attribute_domain = 'POINT'

    #Socket Rust Amount
    rust_amount_socket = worn_painted_metal.interface.new_socket(name = "Rust Amount", in_out='INPUT', socket_type = 'NodeSocketFloat')
    rust_amount_socket.default_value = 1.0
    rust_amount_socket.min_value = -10000.0
    rust_amount_socket.max_value = 10000.0
    rust_amount_socket.subtype = 'NONE'
    rust_amount_socket.attribute_domain = 'POINT'

    #Socket Paint Color
    paint_color_socket = worn_painted_metal.interface.new_socket(name = "Paint Color", in_out='INPUT', socket_type = 'NodeSocketColor')
    paint_color_socket.default_value = (0.7976149916648865, 0.33313000202178955, 0.011567999608814716, 1.0)
    paint_color_socket.attribute_domain = 'POINT'

    #Socket Metal Color
    metal_color_socket = worn_painted_metal.interface.new_socket(name = "Metal Color", in_out='INPUT', socket_type = 'NodeSocketColor')
    metal_color_socket.default_value = (0.19086100161075592, 0.19086100161075592, 0.19086100161075592, 1.0)
    metal_color_socket.attribute_domain = 'POINT'

    #Socket Rust Color
    rust_color_socket = worn_painted_metal.interface.new_socket(name = "Rust Color", in_out='INPUT', socket_type = 'NodeSocketColor')
    rust_color_socket.default_value = (0.09060700237751007, 0.005989000201225281, 0.0, 1.0)
    rust_color_socket.attribute_domain = 'POINT'

    #Socket Metal Roughness
    metal_roughness_socket = worn_painted_metal.interface.new_socket(name = "Metal Roughness", in_out='INPUT', socket_type = 'NodeSocketFloat')
    metal_roughness_socket.default_value = 1.0
    metal_roughness_socket.min_value = 0.0
    metal_roughness_socket.max_value = 2.0
    metal_roughness_socket.subtype = 'NONE'
    metal_roughness_socket.attribute_domain = 'POINT'

    #Socket Paint Roughness
    paint_roughness_socket = worn_painted_metal.interface.new_socket(name = "Paint Roughness", in_out='INPUT', socket_type = 'NodeSocketFloat')
    paint_roughness_socket.default_value = 0.4000000059604645
    paint_roughness_socket.min_value = 0.0
    paint_roughness_socket.max_value = 1.0
    paint_roughness_socket.subtype = 'FACTOR'
    paint_roughness_socket.attribute_domain = 'POINT'

    #Socket Rust Roughness
    rust_roughness_socket = worn_painted_metal.interface.new_socket(name = "Rust Roughness", in_out='INPUT', socket_type = 'NodeSocketFloat')
    rust_roughness_socket.default_value = 0.699999988079071
    rust_roughness_socket.min_value = 0.0
    rust_roughness_socket.max_value = 1.0
    rust_roughness_socket.subtype = 'FACTOR'
    rust_roughness_socket.attribute_domain = 'POINT'

    #Socket Rust Bump Strength
    rust_bump_strength_socket = worn_painted_metal.interface.new_socket(name = "Rust Bump Strength", in_out='INPUT', socket_type = 'NodeSocketFloat')
    rust_bump_strength_socket.default_value = 0.20000000298023224
    rust_bump_strength_socket.min_value = 0.0
    rust_bump_strength_socket.max_value = 1.0
    rust_bump_strength_socket.subtype = 'FACTOR'
    rust_bump_strength_socket.attribute_domain = 'POINT'

    #Socket Metal Bump Strength
    metal_bump_strength_socket = worn_painted_metal.interface.new_socket(name = "Metal Bump Strength", in_out='INPUT', socket_type = 'NodeSocketFloat')
    metal_bump_strength_socket.default_value = 0.05000000074505806
    metal_bump_strength_socket.min_value = 0.0
    metal_bump_strength_socket.max_value = 1.0
    metal_bump_strength_socket.subtype = 'FACTOR'
    metal_bump_strength_socket.attribute_domain = 'POINT'

    #Socket Worn Bump Strength
    worn_bump_strength_socket = worn_painted_metal.interface.new_socket(name = "Worn Bump Strength", in_out='INPUT', socket_type = 'NodeSocketFloat')
    worn_bump_strength_socket.default_value = 0.30000001192092896
    worn_bump_strength_socket.min_value = 0.0
    worn_bump_strength_socket.max_value = 1.0
    worn_bump_strength_socket.subtype = 'FACTOR'
    worn_bump_strength_socket.attribute_domain = 'POINT'


    #initialize worn_painted_metal nodes
    #node Group Output
    group_output = worn_painted_metal.nodes.new("NodeGroupOutput")
    group_output.name = "Group Output"
    group_output.is_active_output = True

    #node Group Input
    group_input = worn_painted_metal.nodes.new("NodeGroupInput")
    group_input.name = "Group Input"

    #node Principled BSDF
    principled_bsdf = worn_painted_metal.nodes.new("ShaderNodeBsdfPrincipled")
    principled_bsdf.name = "Principled BSDF"
    principled_bsdf.distribution = 'MULTI_GGX'
    principled_bsdf.subsurface_method = 'RANDOM_WALK'
    #Metallic
    principled_bsdf.inputs[1].default_value = 1.0
    #IOR
    principled_bsdf.inputs[3].default_value = 1.5
    #Alpha
    principled_bsdf.inputs[4].default_value = 1.0
    #Diffuse Roughness
    principled_bsdf.inputs[7].default_value = 0.0
    #Subsurface Weight
    principled_bsdf.inputs[8].default_value = 0.0
    #Subsurface Radius
    principled_bsdf.inputs[9].default_value = (1.0, 0.20000000298023224, 0.10000000149011612)
    #Subsurface Scale
    principled_bsdf.inputs[10].default_value = 0.05000000074505806
    #Subsurface Anisotropy
    principled_bsdf.inputs[12].default_value = 0.0
    #Specular IOR Level
    principled_bsdf.inputs[13].default_value = 0.5
    #Specular Tint
    principled_bsdf.inputs[14].default_value = (1.0, 1.0, 1.0, 1.0)
    #Anisotropic
    principled_bsdf.inputs[15].default_value = 0.0
    #Anisotropic Rotation
    principled_bsdf.inputs[16].default_value = 0.0
    #Tangent
    principled_bsdf.inputs[17].default_value = (0.0, 0.0, 0.0)
    #Transmission Weight
    principled_bsdf.inputs[18].default_value = 0.0
    #Coat Weight
    principled_bsdf.inputs[19].default_value = 0.0
    #Coat Roughness
    principled_bsdf.inputs[20].default_value = 0.029999999329447746
    #Coat IOR
    principled_bsdf.inputs[21].default_value = 1.5
    #Coat Tint
    principled_bsdf.inputs[22].default_value = (1.0, 1.0, 1.0, 1.0)
    #Coat Normal
    principled_bsdf.inputs[23].default_value = (0.0, 0.0, 0.0)
    #Sheen Weight
    principled_bsdf.inputs[24].default_value = 0.0
    #Sheen Roughness
    principled_bsdf.inputs[25].default_value = 0.5
    #Sheen Tint
    principled_bsdf.inputs[26].default_value = (1.0, 1.0, 1.0, 1.0)
    #Emission Color
    principled_bsdf.inputs[27].default_value = (1.0, 1.0, 1.0, 1.0)
    #Emission Strength
    principled_bsdf.inputs[28].default_value = 0.0
    #Thin Film Thickness
    principled_bsdf.inputs[29].default_value = 0.0
    #Thin Film IOR
    principled_bsdf.inputs[30].default_value = 1.3300000429153442

    #node Noise Texture
    noise_texture = worn_painted_metal.nodes.new("ShaderNodeTexNoise")
    noise_texture.name = "Noise Texture"
    noise_texture.noise_dimensions = '3D'
    noise_texture.noise_type = 'FBM'
    noise_texture.normalize = True
    #Scale
    noise_texture.inputs[2].default_value = 16.0
    #Detail
    noise_texture.inputs[3].default_value = 15.0
    #Roughness
    noise_texture.inputs[4].default_value = 0.6000000238418579
    #Lacunarity
    noise_texture.inputs[5].default_value = 2.0
    #Distortion
    noise_texture.inputs[8].default_value = 0.0

    #node Mapping
    mapping = worn_painted_metal.nodes.new("ShaderNodeMapping")
    mapping.name = "Mapping"
    mapping.vector_type = 'POINT'
    #Location
    mapping.inputs[1].default_value = (0.0, 0.0, 0.0)
    #Rotation
    mapping.inputs[2].default_value = (0.0, 0.0, 0.0)

    #node Texture Coordinate
    texture_coordinate = worn_painted_metal.nodes.new("ShaderNodeTexCoord")
    texture_coordinate.name = "Texture Coordinate"
    texture_coordinate.from_instancer = False

    #node Color Ramp
    color_ramp = worn_painted_metal.nodes.new("ShaderNodeValToRGB")
    color_ramp.name = "Color Ramp"
    color_ramp.color_ramp.color_mode = 'RGB'
    color_ramp.color_ramp.hue_interpolation = 'NEAR'
    color_ramp.color_ramp.interpolation = 'LINEAR'

    #initialize color ramp elements
    color_ramp.color_ramp.elements.remove(color_ramp.color_ramp.elements[0])
    color_ramp_cre_0 = color_ramp.color_ramp.elements[0]
    color_ramp_cre_0.position = 0.3913043141365051
    color_ramp_cre_0.alpha = 1.0
    color_ramp_cre_0.color = (0.0, 0.0, 0.0, 1.0)

    color_ramp_cre_1 = color_ramp.color_ramp.elements.new(0.408212810754776)
    color_ramp_cre_1.alpha = 1.0
    color_ramp_cre_1.color = (1.0, 1.0, 1.0, 1.0)


    #node Hue/Saturation/Value
    hue_saturation_value = worn_painted_metal.nodes.new("ShaderNodeHueSaturation")
    hue_saturation_value.name = "Hue/Saturation/Value"
    #Hue
    hue_saturation_value.inputs[0].default_value = 0.5
    #Saturation
    hue_saturation_value.inputs[1].default_value = 1.0
    #Fac
    hue_saturation_value.inputs[3].default_value = 1.0

    #node Frame
    frame = worn_painted_metal.nodes.new("NodeFrame")
    frame.label = "Mapping"
    frame.name = "Frame"
    frame.label_size = 20
    frame.shrink = True

    #node Frame.001
    frame_001 = worn_painted_metal.nodes.new("NodeFrame")
    frame_001.label = "Paint Mask 1"
    frame_001.name = "Frame.001"
    frame_001.label_size = 20
    frame_001.shrink = True

    #node Noise Texture.001
    noise_texture_001 = worn_painted_metal.nodes.new("ShaderNodeTexNoise")
    noise_texture_001.name = "Noise Texture.001"
    noise_texture_001.noise_dimensions = '3D'
    noise_texture_001.noise_type = 'FBM'
    noise_texture_001.normalize = True
    #Scale
    noise_texture_001.inputs[2].default_value = 10.0
    #Detail
    noise_texture_001.inputs[3].default_value = 15.0
    #Roughness
    noise_texture_001.inputs[4].default_value = 1.0
    #Lacunarity
    noise_texture_001.inputs[5].default_value = 2.0
    #Distortion
    noise_texture_001.inputs[8].default_value = 0.0

    #node Color Ramp.001
    color_ramp_001 = worn_painted_metal.nodes.new("ShaderNodeValToRGB")
    color_ramp_001.name = "Color Ramp.001"
    color_ramp_001.color_ramp.color_mode = 'RGB'
    color_ramp_001.color_ramp.hue_interpolation = 'NEAR'
    color_ramp_001.color_ramp.interpolation = 'LINEAR'

    #initialize color ramp elements
    color_ramp_001.color_ramp.elements.remove(color_ramp_001.color_ramp.elements[0])
    color_ramp_001_cre_0 = color_ramp_001.color_ramp.elements[0]
    color_ramp_001_cre_0.position = 0.4178743064403534
    color_ramp_001_cre_0.alpha = 1.0
    color_ramp_001_cre_0.color = (0.0, 0.0, 0.0, 1.0)

    color_ramp_001_cre_1 = color_ramp_001.color_ramp.elements.new(0.46376803517341614)
    color_ramp_001_cre_1.alpha = 1.0
    color_ramp_001_cre_1.color = (1.0, 1.0, 1.0, 1.0)


    #node Hue/Saturation/Value.001
    hue_saturation_value_001 = worn_painted_metal.nodes.new("ShaderNodeHueSaturation")
    hue_saturation_value_001.name = "Hue/Saturation/Value.001"
    #Hue
    hue_saturation_value_001.inputs[0].default_value = 0.5
    #Saturation
    hue_saturation_value_001.inputs[1].default_value = 1.0
    #Fac
    hue_saturation_value_001.inputs[3].default_value = 1.0

    #node Frame.002
    frame_002 = worn_painted_metal.nodes.new("NodeFrame")
    frame_002.label = "Paint Mask 2"
    frame_002.name = "Frame.002"
    frame_002.label_size = 20
    frame_002.shrink = True

    #node Noise Texture.002
    noise_texture_002 = worn_painted_metal.nodes.new("ShaderNodeTexNoise")
    noise_texture_002.name = "Noise Texture.002"
    noise_texture_002.noise_dimensions = '3D'
    noise_texture_002.noise_type = 'FBM'
    noise_texture_002.normalize = True
    #Scale
    noise_texture_002.inputs[2].default_value = 10.0
    #Detail
    noise_texture_002.inputs[3].default_value = 15.0
    #Roughness
    noise_texture_002.inputs[4].default_value = 1.0
    #Lacunarity
    noise_texture_002.inputs[5].default_value = 2.0
    #Distortion
    noise_texture_002.inputs[8].default_value = 0.0

    #node Color Ramp.002
    color_ramp_002 = worn_painted_metal.nodes.new("ShaderNodeValToRGB")
    color_ramp_002.name = "Color Ramp.002"
    color_ramp_002.color_ramp.color_mode = 'RGB'
    color_ramp_002.color_ramp.hue_interpolation = 'NEAR'
    color_ramp_002.color_ramp.interpolation = 'LINEAR'

    #initialize color ramp elements
    color_ramp_002.color_ramp.elements.remove(color_ramp_002.color_ramp.elements[0])
    color_ramp_002_cre_0 = color_ramp_002.color_ramp.elements[0]
    color_ramp_002_cre_0.position = 0.3840579390525818
    color_ramp_002_cre_0.alpha = 1.0
    color_ramp_002_cre_0.color = (0.0, 0.0, 0.0, 1.0)

    color_ramp_002_cre_1 = color_ramp_002.color_ramp.elements.new(0.7004833221435547)
    color_ramp_002_cre_1.alpha = 1.0
    color_ramp_002_cre_1.color = (1.0, 1.0, 1.0, 1.0)


    #node Hue/Saturation/Value.002
    hue_saturation_value_002 = worn_painted_metal.nodes.new("ShaderNodeHueSaturation")
    hue_saturation_value_002.name = "Hue/Saturation/Value.002"
    #Hue
    hue_saturation_value_002.inputs[0].default_value = 0.5
    #Saturation
    hue_saturation_value_002.inputs[1].default_value = 1.0
    #Fac
    hue_saturation_value_002.inputs[3].default_value = 1.0

    #node Noise Texture.003
    noise_texture_003 = worn_painted_metal.nodes.new("ShaderNodeTexNoise")
    noise_texture_003.name = "Noise Texture.003"
    noise_texture_003.noise_dimensions = '3D'
    noise_texture_003.noise_type = 'FBM'
    noise_texture_003.normalize = True
    #Scale
    noise_texture_003.inputs[2].default_value = 5.0
    #Detail
    noise_texture_003.inputs[3].default_value = 15.0
    #Roughness
    noise_texture_003.inputs[4].default_value = 0.699999988079071
    #Lacunarity
    noise_texture_003.inputs[5].default_value = 2.0
    #Distortion
    noise_texture_003.inputs[8].default_value = 0.0

    #node Bump
    bump = worn_painted_metal.nodes.new("ShaderNodeBump")
    bump.name = "Bump"
    bump.invert = False
    #Distance
    bump.inputs[1].default_value = 1.0
    #Normal
    bump.inputs[3].default_value = (0.0, 0.0, 0.0)

    #node Frame.003
    frame_003 = worn_painted_metal.nodes.new("NodeFrame")
    frame_003.label = "Metal"
    frame_003.name = "Frame.003"
    frame_003.label_size = 20
    frame_003.shrink = True

    #node Principled BSDF.001
    principled_bsdf_001 = worn_painted_metal.nodes.new("ShaderNodeBsdfPrincipled")
    principled_bsdf_001.name = "Principled BSDF.001"
    principled_bsdf_001.distribution = 'MULTI_GGX'
    principled_bsdf_001.subsurface_method = 'RANDOM_WALK'
    #Metallic
    principled_bsdf_001.inputs[1].default_value = 0.0
    #IOR
    principled_bsdf_001.inputs[3].default_value = 1.5
    #Alpha
    principled_bsdf_001.inputs[4].default_value = 1.0
    #Diffuse Roughness
    principled_bsdf_001.inputs[7].default_value = 0.0
    #Subsurface Weight
    principled_bsdf_001.inputs[8].default_value = 0.0
    #Subsurface Radius
    principled_bsdf_001.inputs[9].default_value = (1.0, 0.20000000298023224, 0.10000000149011612)
    #Subsurface Scale
    principled_bsdf_001.inputs[10].default_value = 0.05000000074505806
    #Subsurface Anisotropy
    principled_bsdf_001.inputs[12].default_value = 0.0
    #Specular IOR Level
    principled_bsdf_001.inputs[13].default_value = 0.5
    #Specular Tint
    principled_bsdf_001.inputs[14].default_value = (1.0, 1.0, 1.0, 1.0)
    #Anisotropic
    principled_bsdf_001.inputs[15].default_value = 0.0
    #Anisotropic Rotation
    principled_bsdf_001.inputs[16].default_value = 0.0
    #Tangent
    principled_bsdf_001.inputs[17].default_value = (0.0, 0.0, 0.0)
    #Transmission Weight
    principled_bsdf_001.inputs[18].default_value = 0.0
    #Coat Weight
    principled_bsdf_001.inputs[19].default_value = 0.0
    #Coat Roughness
    principled_bsdf_001.inputs[20].default_value = 0.029999999329447746
    #Coat IOR
    principled_bsdf_001.inputs[21].default_value = 1.5
    #Coat Tint
    principled_bsdf_001.inputs[22].default_value = (1.0, 1.0, 1.0, 1.0)
    #Coat Normal
    principled_bsdf_001.inputs[23].default_value = (0.0, 0.0, 0.0)
    #Sheen Weight
    principled_bsdf_001.inputs[24].default_value = 0.0
    #Sheen Roughness
    principled_bsdf_001.inputs[25].default_value = 0.5
    #Sheen Tint
    principled_bsdf_001.inputs[26].default_value = (1.0, 1.0, 1.0, 1.0)
    #Emission Color
    principled_bsdf_001.inputs[27].default_value = (1.0, 1.0, 1.0, 1.0)
    #Emission Strength
    principled_bsdf_001.inputs[28].default_value = 0.0
    #Thin Film Thickness
    principled_bsdf_001.inputs[29].default_value = 0.0
    #Thin Film IOR
    principled_bsdf_001.inputs[30].default_value = 1.3300000429153442

    #node Noise Texture.004
    noise_texture_004 = worn_painted_metal.nodes.new("ShaderNodeTexNoise")
    noise_texture_004.name = "Noise Texture.004"
    noise_texture_004.noise_dimensions = '3D'
    noise_texture_004.noise_type = 'FBM'
    noise_texture_004.normalize = True
    #Scale
    noise_texture_004.inputs[2].default_value = 9.0
    #Detail
    noise_texture_004.inputs[3].default_value = 15.0
    #Roughness
    noise_texture_004.inputs[4].default_value = 0.699999988079071
    #Lacunarity
    noise_texture_004.inputs[5].default_value = 2.0
    #Distortion
    noise_texture_004.inputs[8].default_value = 0.0

    #node Bump.001
    bump_001 = worn_painted_metal.nodes.new("ShaderNodeBump")
    bump_001.name = "Bump.001"
    bump_001.invert = False
    #Distance
    bump_001.inputs[1].default_value = 1.0
    #Normal
    bump_001.inputs[3].default_value = (0.0, 0.0, 0.0)

    #node Frame.004
    frame_004 = worn_painted_metal.nodes.new("NodeFrame")
    frame_004.label = "Rust"
    frame_004.name = "Frame.004"
    frame_004.label_size = 20
    frame_004.shrink = True

    #node Principled BSDF.002
    principled_bsdf_002 = worn_painted_metal.nodes.new("ShaderNodeBsdfPrincipled")
    principled_bsdf_002.name = "Principled BSDF.002"
    principled_bsdf_002.distribution = 'MULTI_GGX'
    principled_bsdf_002.subsurface_method = 'RANDOM_WALK'
    #Metallic
    principled_bsdf_002.inputs[1].default_value = 0.0
    #IOR
    principled_bsdf_002.inputs[3].default_value = 1.5
    #Alpha
    principled_bsdf_002.inputs[4].default_value = 1.0
    #Diffuse Roughness
    principled_bsdf_002.inputs[7].default_value = 0.0
    #Subsurface Weight
    principled_bsdf_002.inputs[8].default_value = 0.0
    #Subsurface Radius
    principled_bsdf_002.inputs[9].default_value = (1.0, 0.20000000298023224, 0.10000000149011612)
    #Subsurface Scale
    principled_bsdf_002.inputs[10].default_value = 0.05000000074505806
    #Subsurface Anisotropy
    principled_bsdf_002.inputs[12].default_value = 0.0
    #Specular IOR Level
    principled_bsdf_002.inputs[13].default_value = 0.5
    #Specular Tint
    principled_bsdf_002.inputs[14].default_value = (1.0, 1.0, 1.0, 1.0)
    #Anisotropic
    principled_bsdf_002.inputs[15].default_value = 0.0
    #Anisotropic Rotation
    principled_bsdf_002.inputs[16].default_value = 0.0
    #Tangent
    principled_bsdf_002.inputs[17].default_value = (0.0, 0.0, 0.0)
    #Transmission Weight
    principled_bsdf_002.inputs[18].default_value = 0.0
    #Coat Weight
    principled_bsdf_002.inputs[19].default_value = 0.0
    #Coat Roughness
    principled_bsdf_002.inputs[20].default_value = 0.029999999329447746
    #Coat IOR
    principled_bsdf_002.inputs[21].default_value = 1.5
    #Coat Tint
    principled_bsdf_002.inputs[22].default_value = (1.0, 1.0, 1.0, 1.0)
    #Coat Normal
    principled_bsdf_002.inputs[23].default_value = (0.0, 0.0, 0.0)
    #Sheen Weight
    principled_bsdf_002.inputs[24].default_value = 0.0
    #Sheen Roughness
    principled_bsdf_002.inputs[25].default_value = 0.5
    #Sheen Tint
    principled_bsdf_002.inputs[26].default_value = (1.0, 1.0, 1.0, 1.0)
    #Emission Color
    principled_bsdf_002.inputs[27].default_value = (1.0, 1.0, 1.0, 1.0)
    #Emission Strength
    principled_bsdf_002.inputs[28].default_value = 0.0
    #Thin Film Thickness
    principled_bsdf_002.inputs[29].default_value = 0.0
    #Thin Film IOR
    principled_bsdf_002.inputs[30].default_value = 1.3300000429153442

    #node Mix
    mix = worn_painted_metal.nodes.new("ShaderNodeMix")
    mix.name = "Mix"
    mix.blend_type = 'DARKEN'
    mix.clamp_factor = True
    mix.clamp_result = False
    mix.data_type = 'RGBA'
    mix.factor_mode = 'UNIFORM'
    #Factor_Float
    mix.inputs[0].default_value = 1.0

    #node Bump.002
    bump_002 = worn_painted_metal.nodes.new("ShaderNodeBump")
    bump_002.name = "Bump.002"
    bump_002.invert = False
    #Distance
    bump_002.inputs[1].default_value = 1.0
    #Normal
    bump_002.inputs[3].default_value = (0.0, 0.0, 0.0)

    #node Bump.003
    bump_003 = worn_painted_metal.nodes.new("ShaderNodeBump")
    bump_003.name = "Bump.003"
    bump_003.invert = False
    #Distance
    bump_003.inputs[1].default_value = 1.0

    #node Bump.004
    bump_004 = worn_painted_metal.nodes.new("ShaderNodeBump")
    bump_004.name = "Bump.004"
    bump_004.invert = False
    #Distance
    bump_004.inputs[1].default_value = 1.0

    #node Frame.005
    frame_005 = worn_painted_metal.nodes.new("NodeFrame")
    frame_005.label = "Paint"
    frame_005.name = "Frame.005"
    frame_005.label_size = 20
    frame_005.shrink = True

    #node Mix Shader
    mix_shader = worn_painted_metal.nodes.new("ShaderNodeMixShader")
    mix_shader.name = "Mix Shader"

    #node Mix Shader.001
    mix_shader_001 = worn_painted_metal.nodes.new("ShaderNodeMixShader")
    mix_shader_001.name = "Mix Shader.001"

    #node Color Ramp.003
    color_ramp_003 = worn_painted_metal.nodes.new("ShaderNodeValToRGB")
    color_ramp_003.name = "Color Ramp.003"
    color_ramp_003.color_ramp.color_mode = 'RGB'
    color_ramp_003.color_ramp.hue_interpolation = 'NEAR'
    color_ramp_003.color_ramp.interpolation = 'LINEAR'

    #initialize color ramp elements
    color_ramp_003.color_ramp.elements.remove(color_ramp_003.color_ramp.elements[0])
    color_ramp_003_cre_0 = color_ramp_003.color_ramp.elements[0]
    color_ramp_003_cre_0.position = 0.3405795991420746
    color_ramp_003_cre_0.alpha = 1.0
    color_ramp_003_cre_0.color = (1.0, 1.0, 1.0, 1.0)

    color_ramp_003_cre_1 = color_ramp_003.color_ramp.elements.new(0.40338173508644104)
    color_ramp_003_cre_1.alpha = 1.0
    color_ramp_003_cre_1.color = (0.14388999342918396, 0.14388999342918396, 0.14388999342918396, 1.0)

    color_ramp_003_cre_2 = color_ramp_003.color_ramp.elements.new(0.5362321734428406)
    color_ramp_003_cre_2.alpha = 1.0
    color_ramp_003_cre_2.color = (1.0, 1.0, 1.0, 1.0)


    #node Map Range
    map_range = worn_painted_metal.nodes.new("ShaderNodeMapRange")
    map_range.name = "Map Range"
    map_range.clamp = True
    map_range.data_type = 'FLOAT'
    map_range.interpolation_type = 'LINEAR'
    #From Min
    map_range.inputs[1].default_value = 0.0
    #To Min
    map_range.inputs[3].default_value = 0.0
    #To Max
    map_range.inputs[4].default_value = 1.0

    #Set parents
    principled_bsdf.parent = frame_003
    noise_texture.parent = frame_001
    mapping.parent = frame
    texture_coordinate.parent = frame
    color_ramp.parent = frame_001
    hue_saturation_value.parent = frame_001
    noise_texture_001.parent = frame_002
    color_ramp_001.parent = frame_002
    hue_saturation_value_001.parent = frame_002
    noise_texture_002.parent = frame_003
    color_ramp_002.parent = frame_003
    hue_saturation_value_002.parent = frame_003
    noise_texture_003.parent = frame_003
    bump.parent = frame_003
    principled_bsdf_001.parent = frame_004
    noise_texture_004.parent = frame_004
    bump_001.parent = frame_004
    principled_bsdf_002.parent = frame_005
    bump_002.parent = frame_005
    bump_003.parent = frame_003
    bump_004.parent = frame_004

    #Set locations
    group_output.location = (1336.6710205078125, 0.0)
    group_input.location = (-1416.9749755859375, -78.93778991699219)
    principled_bsdf.location = (81.79358673095703, 1213.2081298828125)
    noise_texture.location = (-555.2339477539062, 646.2423095703125)
    mapping.location = (-868.6695556640625, 319.9048767089844)
    texture_coordinate.location = (-1030.427001953125, 317.39105224609375)
    color_ramp.location = (-222.50807189941406, 592.8782348632812)
    hue_saturation_value.location = (-398.1706848144531, 630.4268188476562)
    frame.location = (-87.35983276367188, -453.905029296875)
    frame_001.location = (192.18869018554688, -984.3826904296875)
    noise_texture_001.location = (-555.2339477539062, 646.2423095703125)
    color_ramp_001.location = (-230.33847045898438, 637.0921630859375)
    hue_saturation_value_001.location = (-398.1706848144531, 630.4268188476562)
    frame_002.location = (193.73751831054688, -1366.3363037109375)
    noise_texture_002.location = (-581.5336303710938, 1287.27783203125)
    color_ramp_002.location = (-416.75341796875, 1291.5819091796875)
    hue_saturation_value_002.location = (-155.60211181640625, 1280.8775634765625)
    noise_texture_003.location = (-433.66705322265625, 1076.7520751953125)
    bump.location = (-278.4990539550781, 1069.939697265625)
    frame_003.location = (116.28048706054688, -1030.679931640625)
    principled_bsdf_001.location = (109.12448120117188, 1709.478759765625)
    noise_texture_004.location = (-574.1483764648438, 1709.1075439453125)
    bump_001.location = (-275.5672302246094, 1598.3482666015625)
    frame_004.location = (179.30227661132812, -1012.7719116210938)
    principled_bsdf_002.location = (501.4718322753906, 504.904541015625)
    mix.location = (270.91973876953125, -489.9776916503906)
    bump_002.location = (322.70599365234375, 383.4222412109375)
    bump_003.location = (-69.56387329101562, 1075.545654296875)
    bump_004.location = (-98.90778350830078, 1607.3372802734375)
    frame_005.location = (186.06661987304688, -980.5084228515625)
    mix_shader.location = (974.47314453125, -258.150146484375)
    mix_shader_001.location = (1146.6710205078125, -124.6610107421875)
    color_ramp_003.location = (526.7532958984375, -38.10321044921875)
    map_range.location = (778.14599609375, -26.104736328125)

    #Set dimensions
    group_output.width, group_output.height = 140.0, 100.0
    group_input.width, group_input.height = 140.0, 100.0
    principled_bsdf.width, principled_bsdf.height = 240.0, 100.0
    noise_texture.width, noise_texture.height = 140.0, 100.0
    mapping.width, mapping.height = 140.0, 100.0
    texture_coordinate.width, texture_coordinate.height = 140.0, 100.0
    color_ramp.width, color_ramp.height = 240.0, 100.0
    hue_saturation_value.width, hue_saturation_value.height = 150.0, 100.0
    frame.width, frame.height = 362.0, 359.0
    frame_001.width, frame_001.height = 633.0, 351.0
    noise_texture_001.width, noise_texture_001.height = 140.0, 100.0
    color_ramp_001.width, color_ramp_001.height = 240.0, 100.0
    hue_saturation_value_001.width, hue_saturation_value_001.height = 150.0, 100.0
    frame_002.width, frame_002.height = 624.0, 351.0
    noise_texture_002.width, noise_texture_002.height = 140.0, 100.0
    color_ramp_002.width, color_ramp_002.height = 240.0, 100.0
    hue_saturation_value_002.width, hue_saturation_value_002.height = 150.0, 100.0
    noise_texture_003.width, noise_texture_003.height = 140.0, 100.0
    bump.width, bump.height = 140.0, 100.0
    frame_003.width, frame_003.height = 963.0, 566.0
    principled_bsdf_001.width, principled_bsdf_001.height = 240.0, 100.0
    noise_texture_004.width, noise_texture_004.height = 140.0, 100.0
    bump_001.width, bump_001.height = 140.0, 100.0
    frame_004.width, frame_004.height = 983.0, 413.0
    principled_bsdf_002.width, principled_bsdf_002.height = 240.0, 100.0
    mix.width, mix.height = 140.0, 100.0
    bump_002.width, bump_002.height = 140.0, 100.0
    bump_003.width, bump_003.height = 140.0, 100.0
    bump_004.width, bump_004.height = 140.0, 100.0
    frame_005.width, frame_005.height = 478.9999694824219, 413.0
    mix_shader.width, mix_shader.height = 140.0, 100.0
    mix_shader_001.width, mix_shader_001.height = 140.0, 100.0
    color_ramp_003.width, color_ramp_003.height = 240.0, 100.0
    map_range.width, map_range.height = 140.0, 100.0

    #initialize worn_painted_metal links
    #principled_bsdf.BSDF -> mix_shader.Shader
    worn_painted_metal.links.new(principled_bsdf.outputs[0], mix_shader.inputs[1])
    #bump_002.Normal -> principled_bsdf_002.Normal
    worn_painted_metal.links.new(bump_002.outputs[0], principled_bsdf_002.inputs[5])
    #mapping.Vector -> noise_texture_004.Vector
    worn_painted_metal.links.new(mapping.outputs[0], noise_texture_004.inputs[0])
    #noise_texture.Fac -> hue_saturation_value.Color
    worn_painted_metal.links.new(noise_texture.outputs[0], hue_saturation_value.inputs[4])
    #mapping.Vector -> noise_texture_003.Vector
    worn_painted_metal.links.new(mapping.outputs[0], noise_texture_003.inputs[0])
    #hue_saturation_value_002.Color -> principled_bsdf.Roughness
    worn_painted_metal.links.new(hue_saturation_value_002.outputs[0], principled_bsdf.inputs[2])
    #mix.Result -> bump_003.Height
    worn_painted_metal.links.new(mix.outputs[2], bump_003.inputs[2])
    #mix.Result -> mix_shader.Fac
    worn_painted_metal.links.new(mix.outputs[2], mix_shader.inputs[0])
    #bump_001.Normal -> bump_004.Normal
    worn_painted_metal.links.new(bump_001.outputs[0], bump_004.inputs[3])
    #mapping.Vector -> noise_texture.Vector
    worn_painted_metal.links.new(mapping.outputs[0], noise_texture.inputs[0])
    #color_ramp_001.Color -> mix.B
    worn_painted_metal.links.new(color_ramp_001.outputs[0], mix.inputs[7])
    #color_ramp_002.Color -> hue_saturation_value_002.Color
    worn_painted_metal.links.new(color_ramp_002.outputs[0], hue_saturation_value_002.inputs[4])
    #bump.Normal -> bump_003.Normal
    worn_painted_metal.links.new(bump.outputs[0], bump_003.inputs[3])
    #mapping.Vector -> noise_texture_002.Vector
    worn_painted_metal.links.new(mapping.outputs[0], noise_texture_002.inputs[0])
    #noise_texture_002.Fac -> color_ramp_002.Fac
    worn_painted_metal.links.new(noise_texture_002.outputs[0], color_ramp_002.inputs[0])
    #texture_coordinate.Object -> mapping.Vector
    worn_painted_metal.links.new(texture_coordinate.outputs[3], mapping.inputs[0])
    #hue_saturation_value.Color -> color_ramp.Fac
    worn_painted_metal.links.new(hue_saturation_value.outputs[0], color_ramp.inputs[0])
    #noise_texture_003.Fac -> bump.Height
    worn_painted_metal.links.new(noise_texture_003.outputs[0], bump.inputs[2])
    #hue_saturation_value.Color -> color_ramp_003.Fac
    worn_painted_metal.links.new(hue_saturation_value.outputs[0], color_ramp_003.inputs[0])
    #principled_bsdf_002.BSDF -> mix_shader.Shader
    worn_painted_metal.links.new(principled_bsdf_002.outputs[0], mix_shader.inputs[2])
    #noise_texture_004.Fac -> bump_001.Height
    worn_painted_metal.links.new(noise_texture_004.outputs[0], bump_001.inputs[2])
    #map_range.Result -> mix_shader_001.Fac
    worn_painted_metal.links.new(map_range.outputs[0], mix_shader_001.inputs[0])
    #mapping.Vector -> noise_texture_001.Vector
    worn_painted_metal.links.new(mapping.outputs[0], noise_texture_001.inputs[0])
    #hue_saturation_value_001.Color -> color_ramp_001.Fac
    worn_painted_metal.links.new(hue_saturation_value_001.outputs[0], color_ramp_001.inputs[0])
    #noise_texture_001.Fac -> hue_saturation_value_001.Color
    worn_painted_metal.links.new(noise_texture_001.outputs[0], hue_saturation_value_001.inputs[4])
    #mix.Result -> bump_002.Height
    worn_painted_metal.links.new(mix.outputs[2], bump_002.inputs[2])
    #color_ramp_003.Color -> map_range.Value
    worn_painted_metal.links.new(color_ramp_003.outputs[0], map_range.inputs[0])
    #principled_bsdf_001.BSDF -> mix_shader_001.Shader
    worn_painted_metal.links.new(principled_bsdf_001.outputs[0], mix_shader_001.inputs[1])
    #mix_shader.Shader -> mix_shader_001.Shader
    worn_painted_metal.links.new(mix_shader.outputs[0], mix_shader_001.inputs[2])
    #bump_004.Normal -> principled_bsdf_001.Normal
    worn_painted_metal.links.new(bump_004.outputs[0], principled_bsdf_001.inputs[5])
    #color_ramp.Color -> mix.A
    worn_painted_metal.links.new(color_ramp.outputs[0], mix.inputs[6])
    #bump_003.Normal -> principled_bsdf.Normal
    worn_painted_metal.links.new(bump_003.outputs[0], principled_bsdf.inputs[5])
    #mix.Result -> bump_004.Height
    worn_painted_metal.links.new(mix.outputs[2], bump_004.inputs[2])
    #mix_shader_001.Shader -> group_output.Shader
    worn_painted_metal.links.new(mix_shader_001.outputs[0], group_output.inputs[0])
    #group_input.Scale -> mapping.Scale
    worn_painted_metal.links.new(group_input.outputs[0], mapping.inputs[3])
    #group_input.Paint Ware 1 -> hue_saturation_value.Value
    worn_painted_metal.links.new(group_input.outputs[1], hue_saturation_value.inputs[2])
    #group_input.Paint Ware 2 -> hue_saturation_value_001.Value
    worn_painted_metal.links.new(group_input.outputs[2], hue_saturation_value_001.inputs[2])
    #group_input.Rust Amount -> map_range.From Max
    worn_painted_metal.links.new(group_input.outputs[3], map_range.inputs[2])
    #group_input.Paint Color -> principled_bsdf_002.Base Color
    worn_painted_metal.links.new(group_input.outputs[4], principled_bsdf_002.inputs[0])
    #group_input.Metal Color -> principled_bsdf.Base Color
    worn_painted_metal.links.new(group_input.outputs[5], principled_bsdf.inputs[0])
    #group_input.Rust Color -> principled_bsdf_001.Base Color
    worn_painted_metal.links.new(group_input.outputs[6], principled_bsdf_001.inputs[0])
    #group_input.Metal Roughness -> hue_saturation_value_002.Value
    worn_painted_metal.links.new(group_input.outputs[7], hue_saturation_value_002.inputs[2])
    #group_input.Paint Roughness -> principled_bsdf_002.Roughness
    worn_painted_metal.links.new(group_input.outputs[8], principled_bsdf_002.inputs[2])
    #group_input.Rust Roughness -> principled_bsdf_001.Roughness
    worn_painted_metal.links.new(group_input.outputs[9], principled_bsdf_001.inputs[2])
    #group_input.Rust Bump Strength -> bump_001.Strength
    worn_painted_metal.links.new(group_input.outputs[10], bump_001.inputs[0])
    #group_input.Metal Bump Strength -> bump.Strength
    worn_painted_metal.links.new(group_input.outputs[11], bump.inputs[0])
    #group_input.Worn Bump Strength -> bump_004.Strength
    worn_painted_metal.links.new(group_input.outputs[12], bump_004.inputs[0])
    #group_input.Worn Bump Strength -> bump_003.Strength
    worn_painted_metal.links.new(group_input.outputs[12], bump_003.inputs[0])
    #group_input.Worn Bump Strength -> bump_002.Strength
    worn_painted_metal.links.new(group_input.outputs[12], bump_002.inputs[0])
    return worn_painted_metal

worn_painted_metal = worn_painted_metal_node_group()

#initialize Worn Painted Metal node group
def worn_painted_metal_1_node_group():

    worn_painted_metal_1 = mat.node_tree
    #start with a clean node tree
    for node in worn_painted_metal_1.nodes:
        worn_painted_metal_1.nodes.remove(node)
    worn_painted_metal_1.color_tag = 'NONE'
    worn_painted_metal_1.description = ""
    worn_painted_metal_1.default_group_node_width = 140
    

    #worn_painted_metal_1 interface

    #initialize worn_painted_metal_1 nodes
    #node Material Output
    material_output = worn_painted_metal_1.nodes.new("ShaderNodeOutputMaterial")
    material_output.name = "Material Output"
    material_output.is_active_output = True
    material_output.target = 'ALL'
    #Displacement
    material_output.inputs[2].default_value = (0.0, 0.0, 0.0)
    #Thickness
    material_output.inputs[3].default_value = 0.0

    #node Group
    group = worn_painted_metal_1.nodes.new("ShaderNodeGroup")
    group.name = "Group"
    group.node_tree = worn_painted_metal
    #Socket_1
    group.inputs[0].default_value = 1.0
    #Socket_2
    group.inputs[1].default_value = 1.0
    #Socket_3
    group.inputs[2].default_value = 1.0
    #Socket_4
    group.inputs[3].default_value = 1.0
    #Socket_5
    group.inputs[4].default_value = (0.7976149916648865, 0.33313000202178955, 0.011567999608814716, 1.0)
    #Socket_6
    group.inputs[5].default_value = (0.19086100161075592, 0.19086100161075592, 0.19086100161075592, 1.0)
    #Socket_7
    group.inputs[6].default_value = (0.09060700237751007, 0.005989000201225281, 0.0, 1.0)
    #Socket_8
    group.inputs[7].default_value = 1.0
    #Socket_9
    group.inputs[8].default_value = 0.4000000059604645
    #Socket_10
    group.inputs[9].default_value = 0.699999988079071
    #Socket_11
    group.inputs[10].default_value = 0.20000000298023224
    #Socket_12
    group.inputs[11].default_value = 0.05000000074505806
    #Socket_13
    group.inputs[12].default_value = 0.30000001192092896


    #Set locations
    material_output.location = (1111.848876953125, 867.2839965820312)
    group.location = (841.9303588867188, 873.5743408203125)

    #Set dimensions
    material_output.width, material_output.height = 140.0, 100.0
    group.width, group.height = 259.27862548828125, 100.0

    #initialize worn_painted_metal_1 links
    #group.Shader -> material_output.Surface
    worn_painted_metal_1.links.new(group.outputs[0], material_output.inputs[0])
    return worn_painted_metal_1

worn_painted_metal_1 = worn_painted_metal_1_node_group()
print("Worn Painted Metal Material created.")
```
